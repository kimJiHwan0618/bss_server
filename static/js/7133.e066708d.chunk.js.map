{"version":3,"file":"static/js/7133.e066708d.chunk.js","mappings":"0SAoNA,UAvMA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA8CC,EAAAA,EAAAA,UAAS,IAAG,eAAnDC,EAAe,KAAEC,EAAkB,KAC1C,GAA0CF,EAAAA,EAAAA,UAAS,IAAG,eAA/CG,EAAa,KAAEC,EAAgB,KACtC,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAArCK,EAAQ,KAAEC,EAAW,KAC5B,GAAoCN,EAAAA,EAAAA,WAAS,GAAM,eAA5CO,EAAU,KAAEC,EAAa,KAC1BC,GAAgBC,EAAAA,EAAAA,UAChBC,GAAcD,EAAAA,EAAAA,UACdE,GAAYF,EAAAA,EAAAA,UACZG,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAAgBC,QAC9CC,GAAgBH,EAAAA,EAAAA,IAAYC,EAAAA,IAAgBG,MAC5CC,GAAWL,EAAAA,EAAAA,IAAYM,EAAAA,IAAgBjB,SAEvCkB,EAAiB,WACrB,GAAKhB,EAeHM,GAASW,EAAAA,EAAAA,IAAY,CAAEC,QAAS,8EAAmBC,QAAS,cAf7C,CACflB,GAAc,GACd,IAOMmB,EAPUN,EAASO,QACvB,SAACC,GAAG,MAC8B,QAAhCpB,EAAcqB,QAAQC,OAAmBF,EAAIG,YAAcvB,EAAcqB,QAAQC,KAAK,IAElEH,QACtB,SAACC,GAAG,MAAmC,QAA9BlB,EAAYmB,QAAQC,OAAmBF,EAAII,UAAYtB,EAAYmB,QAAQC,KAAK,IAEnEH,QACtB,SAACC,GAAG,MAAiC,KAA5BjB,EAAUkB,QAAQC,OAAgBF,EAAIK,WAAWC,SAASvB,EAAUkB,QAAQC,MAAM,IAE7FzB,EAAYqB,GACZnB,GAAc,EAChB,CAGF,EAwBA,OAJA4B,EAAAA,EAAAA,YAAU,WACRlC,EAAmBa,EACrB,GAAG,KAGD,gBAAKsB,GAAG,UAAUC,UAAU,0CAAyC,UACnE,oBAASA,UAAU,sBAAqB,UACtC,iBAAKA,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,OAAM,WACnB,iBAAKA,UAAU,iBAAgB,WAC7B,2BACE,wBAAI,8BACJ,yBACE,oBACEA,UAAU,iBACVC,IAAK9B,EACL+B,SAAU,SAACC,GACTrC,EACEe,EAAcS,QAAO,SAACC,GAAG,OAAKA,EAAIa,WAAaD,EAAEE,OAAOZ,KAAK,IAEjE,EAAE,WAEF,mBAAQA,MAAM,MAAK,SAAC,iBACnB9B,EAAgB2C,KAAI,SAACf,EAAKgB,GAAG,OAC5B,mBAAuBd,MAAOF,EAAIiB,KAAK,SACpCjB,EAAIkB,UADMlB,EAAIiB,KAER,aAKjB,2BACE,wBAAI,kBACJ,yBACE,oBAAQR,UAAU,iBAAiBC,IAAK5B,EAAY,WAClD,mBAAQoB,MAAM,MAAK,SAAC,iBACnB5B,EAAcyC,KAAI,SAACf,EAAKgB,GAAG,OAC1B,mBAAuBd,MAAOF,EAAIiB,KAAK,SACpCjB,EAAIkB,UADMlB,EAAIiB,KAER,gBAMnB,gBAAKR,UAAU,cAAa,UAC1B,2BACE,wBAAI,wBACJ,yBACE,kBACEU,KAAK,OACLV,UAAU,gBACVW,YAAY,0DACZC,WAAY,SAACT,GAAC,MAAe,UAAVA,EAAEU,KAAmB5B,GAAgB,EACxDgB,IAAK3B,YAKb,oBACE0B,UAAU,cACVc,QAAS,WACP7B,GACF,EAAE,WAEF,gBAAK8B,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAc,UACxD,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,mDAGN,iBAAMrB,UAAU,YAAW,SAAC,wBAGhC,oBACEA,UAAU,uBACVc,QAAS,WACPtD,EAAS,oDAAqD,CAC5D8D,MAAO,CACLC,WAAY,CACV,CAAEC,MAAO,eAAMC,KAAM,wDAI7B,EAAE,WAEF,gBAAKV,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAc,UACxD,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,kCAGN,iBAAMrB,UAAU,YAAW,SAAC,wBAGhC,iBACEA,UAAU,aACVc,QAAS,SAACX,IAxHC,SAACA,GACpB,IAAMuB,EAAS,CAAC,EAChB,GAAgD,OAA5CvB,EAAEE,OAAOsB,aAAa,kBAA4B,CACpDzD,GAAc,GACdiC,EAAEE,OAAOuB,WAAWC,WAAWC,SAAQ,SAACvC,GACtCmC,EAAO,GAAD,OAAInC,EAAIoC,aAAa,oBAAuBpC,EAAIwC,WACxD,IACA,IAAMC,EAAYjE,EAASuB,QAAO,SAACC,GAAG,OAAKA,EAAI0C,WAAaP,EAAOO,QAAQ,IACrE1C,GAAG,UAAQyC,EAAU,IAC3BzC,EAAIgC,WAAa,CACf,CAAEC,MAAO,eAAMC,KAAM,sDAEvBjE,EAAS,oDAAqD,CAC5D8D,MAAO/B,GAEX,CACF,CAyGY2C,CAAa/B,EACf,EAAE,WAEc,IAAflC,IACC,iBAAK+B,UAAU,gBAAe,WAC5B,gBAAKA,UAAU,QACf,SAAC,IAAM,CACLA,UAAU,SACVmC,QAAS,CAAEC,cAAeC,GAC1BC,MAAO,IACPC,OAAQ,UAId,SAAC,IAAI,CACHC,KAAK,OACLxC,UAAU,OACVyC,KAAM1E,EACN2E,WAAS,EACTC,QAAS,CACP,CAAEC,KAAM,8BAAW7C,GAAI,WAAYuC,MAAO,SAC1C,CAAEM,KAAM,2BAAQ7C,GAAI,kBAAmBuC,MAAO,SAC9C,CAAEM,KAAM,qBAAO7C,GAAI,aACnB,CAAE6C,KAAM,iCAAS7C,GAAI,eACrB,CAAE6C,KAAM,qBAAO7C,GAAI,cACnB,CAAE6C,KAAM,eAAM7C,GAAI,cAClB,CAAE6C,KAAM,2BAAQ7C,GAAI,UAAWuC,MAAO,SACtC,CAAEM,KAAM,2BAAQ7C,GAAI,uBACpB,CAAE6C,KAAM,2BAAQ7C,GAAI,aAAcuC,MAAO,SACzC,CAAEM,KAAM,2BAAQ7C,GAAI,aAAcuC,MAAO,UAG3CO,WAAY,CACVC,SAAS,EACTC,MAAO,eAQvB,C","sources":["app/pages/deviceManagement/Stations.js"],"sourcesContent":["import 'assets/css/qrCertificationHistory.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport { selectComboBox } from 'app/store/common/comboBox';\r\nimport { selectStations } from 'app/store/common/stations';\r\n\r\nfunction Stations() {\r\n  const navigate = useNavigate();\r\n  const [projectCategory, setProjectCategory] = useState([]);\r\n  const [groupCategory, setGroupCategory] = useState([]);\r\n  const [stations, setStations] = useState([]);\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const projectSelect = useRef();\r\n  const groupSelect = useRef();\r\n  const nameInput = useRef();\r\n  const dispatch = useDispatch();\r\n  const projectComboBox = useSelector(selectComboBox).project;\r\n  const groupComboBox = useSelector(selectComboBox).group;\r\n  const dataList = useSelector(selectStations).stations;\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      const filter1 = dataList.filter(\r\n        (obj) =>\r\n          projectSelect.current.value === 'ALL' || obj.projectId === projectSelect.current.value\r\n      );\r\n      const filter2 = filter1.filter(\r\n        (obj) => groupSelect.current.value === 'ALL' || obj.groupId === groupSelect.current.value\r\n      );\r\n      const filter3 = filter2.filter(\r\n        (obj) => nameInput.current.value === '' || obj.deviceName.includes(nameInput.current.value)\r\n      );\r\n      setStations(filter3);\r\n      setSearchFlag(false);\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n      const filterObj = stations.filter((obj) => obj.deviceId === rowObj.deviceId);\r\n      const obj = { ...filterObj[0] };\r\n      obj.detailLink = [\r\n        { title: '수정', link: '/bss_server/deviceManagement/stations/addOrUpdate' },\r\n      ];\r\n      navigate('/bss_server/deviceManagement/stations/addOrUpdate', {\r\n        state: obj,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProjectCategory(projectComboBox);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"station\" className=\"section__grid__wrap content qr__history\">\r\n      <section className=\"qr__history__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap groups\">\r\n            <div className=\"left\">\r\n              <div className=\"selector__wrap\">\r\n                <dl>\r\n                  <dt>프로젝트</dt>\r\n                  <dd>\r\n                    <select\r\n                      className=\"custom__select\"\r\n                      ref={projectSelect}\r\n                      onChange={(e) => {\r\n                        setGroupCategory(\r\n                          groupComboBox.filter((obj) => obj.parentId === e.target.value)\r\n                        );\r\n                      }}\r\n                    >\r\n                      <option value=\"ALL\">전체</option>\r\n                      {projectCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n                <dl>\r\n                  <dt>그룹</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={groupSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      {groupCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"input__wrap\">\r\n                <dl>\r\n                  <dt>장치명</dt>\r\n                  <dd>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"custom__input\"\r\n                      placeholder=\"장치명을 입력하세요\"\r\n                      onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n                      ref={nameInput}\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <button\r\n                className=\"custom__btn\"\r\n                onClick={() => {\r\n                  searchBtnClick();\r\n                }}\r\n              >\r\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"f__medium\">검색</span>\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"custom__btn add__btn\"\r\n              onClick={() => {\r\n                navigate('/bss_server/deviceManagement/stations/addOrUpdate', {\r\n                  state: {\r\n                    detailLink: [\r\n                      { title: '추가', link: '/bss_server/deviceManagement/stations/addOrUpdate' },\r\n                    ],\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">추가</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={stations}\r\n              resizable\r\n              columns={[\r\n                { name: '디바이스 ID', id: 'deviceId', width: '145px' },\r\n                { name: '장비상태', id: 'deviceStateName', width: '145px' },\r\n                { name: '그룹명', id: 'groupName' },\r\n                { name: '프로젝트명', id: 'projectName' },\r\n                { name: '장치명', id: 'deviceName' },\r\n                { name: '설명', id: 'deviceDesc' },\r\n                { name: '설치장소', id: 'address', width: '380px' },\r\n                { name: '운영상태', id: 'operationConfigName' },\r\n                { name: '등록일자', id: 'createTime', width: '180px' },\r\n                { name: '수정일자', id: 'updateTime', width: '180px' },\r\n                // 24 / 8\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stations;\r\n"],"names":["navigate","useNavigate","useState","projectCategory","setProjectCategory","groupCategory","setGroupCategory","stations","setStations","searchFlag","setSearchFlag","projectSelect","useRef","groupSelect","nameInput","dispatch","useDispatch","projectComboBox","useSelector","selectComboBox","project","groupComboBox","group","dataList","selectStations","searchBtnClick","showMessage","message","variant","filter3","filter","obj","current","value","projectId","groupId","deviceName","includes","useEffect","id","className","ref","onChange","e","parentId","target","map","idx","code","codeName","type","placeholder","onKeyPress","key","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","state","detailLink","title","link","rowObj","getAttribute","parentNode","childNodes","forEach","textContent","filterObj","deviceId","gridRowClick","options","animationData","loading","width","height","sort","data","resizable","columns","name","pagination","enabled","limit"],"sourceRoot":""}