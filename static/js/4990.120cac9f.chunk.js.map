{"version":3,"file":"static/js/4990.120cac9f.chunk.js","mappings":"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","sources":["app/pages/systemManagement/Department.js"],"sourcesContent":["import 'assets/css/qrCertificationHistory.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport { selectComboBox } from 'app/store/common/comboBox';\r\nimport { selectDepartment } from 'app/store/common/department';\r\n\r\nfunction Department() {\r\n  const navigate = useNavigate();\r\n  const [department, setDepartment] = useState([]);\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const [projectCategory, setProjectCategory] = useState([]);\r\n  const useYnSelect = useRef();\r\n  const projectSelect = useRef();\r\n  const nameInput = useRef();\r\n  const dispatch = useDispatch();\r\n  const projectComboBox = useSelector(selectComboBox).project;\r\n  const dataList = useSelector(selectDepartment).department;\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      const filter1 = dataList.filter(\r\n        (obj) =>\r\n          projectSelect.current.value === 'ALL' || obj.project.includes(projectSelect.current.value)\r\n      );\r\n      const filter2 = filter1.filter(\r\n        (obj) => useYnSelect.current.value === 'ALL' || obj.useYn === useYnSelect.current.value\r\n      );\r\n      const filter3 = filter2.filter(\r\n        (obj) => nameInput.current.value === '' || obj.deptName.includes(nameInput.current.value)\r\n      );\r\n      setDepartment(filter3);\r\n      setSearchFlag(false);\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n      const obj = dataList.filter((obj) => obj.deptId === rowObj.deptId);\r\n      const test = { ...obj[0] };\r\n      test.detailLink = [\r\n        { title: '수정', link: '/bss_server/systemManagement/department/addOrUpdate' },\r\n      ];\r\n      console.log(test);\r\n      navigate(test.detailLink[0].link, {\r\n        state: test,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProjectCategory(projectComboBox);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"department\" className=\"section__grid__wrap content qr__history\">\r\n      <section className=\"qr__history__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap groups\">\r\n            <div className=\"left\">\r\n              <div className=\"selector__wrap\">\r\n                <dl>\r\n                  <dt>프로젝트</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={projectSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      {projectCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n                <dl>\r\n                  <dt>사용여부</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={useYnSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      <option value=\"1\">사용</option>\r\n                      <option value=\"0\">미사용</option>\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"input__wrap\">\r\n                <dl>\r\n                  <dt>부서명</dt>\r\n                  <dd>\r\n                    <input\r\n                      onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n                      ref={nameInput}\r\n                      type=\"text\"\r\n                      className=\"custom__input\"\r\n                      placeholder=\"이름을 입력하세요\"\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <button\r\n                className=\"custom__btn\"\r\n                onClick={() => {\r\n                  searchBtnClick();\r\n                }}\r\n              >\r\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"f__medium\">검색</span>\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"custom__btn add__btn\"\r\n              onClick={(e) => {\r\n                navigate('/bss_server/systemManagement/department/addOrUpdate', {\r\n                  state: {\r\n                    detailLink: [\r\n                      {\r\n                        title: '추가',\r\n                        link: '/bss_server/systemManagement/department/addOrUpdate',\r\n                      },\r\n                    ],\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">추가</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              sort=\"true\"\r\n              resizable\r\n              className=\"grid\"\r\n              data={department}\r\n              columns={[\r\n                { name: '부서 ID', id: 'deptId', width: '110px' },\r\n                { name: '부서명', id: 'deptName' },\r\n                { name: '프로젝트명', id: 'projectName' },\r\n                { name: '설명', id: 'deptDesc', width: '400px' },\r\n                {\r\n                  name: '사용여부',\r\n                  id: 'useYn',\r\n                  formatter: (_, row) => (row.cells[3].data === '1' ? '사용' : '미사용'),\r\n                  width: '120px',\r\n                },\r\n                { name: '등록자명', id: 'createUsername' },\r\n                { name: '등록일시', id: 'createTime', width: '180px' },\r\n                { name: '최종수정자명', id: 'updateUsername' },\r\n                { name: '최종수정일시', id: 'updateTime', width: '180px' },\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Department;\r\n"],"names":["navigate","useNavigate","useState","department","setDepartment","searchFlag","setSearchFlag","projectCategory","setProjectCategory","useYnSelect","useRef","projectSelect","nameInput","dispatch","useDispatch","projectComboBox","useSelector","selectComboBox","project","dataList","selectDepartment","searchBtnClick","showMessage","message","variant","filter3","filter","obj","current","value","includes","useYn","deptName","useEffect","id","className","ref","map","idx","code","codeName","onKeyPress","e","key","type","placeholder","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","state","detailLink","title","link","rowObj","target","getAttribute","parentNode","childNodes","forEach","textContent","deptId","test","console","log","gridRowClick","options","animationData","loading","width","height","sort","resizable","data","columns","name","formatter","_","row","cells","pagination","enabled","limit"],"sourceRoot":""}