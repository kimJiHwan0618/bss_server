{"version":3,"file":"static/js/460.44d9b527.chunk.js","mappings":"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","sources":["app/pages/systemManagement/Admin.js"],"sourcesContent":["import 'assets/css/qrCertificationHistory.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { selectComboBox } from 'app/store/common/comboBox';\r\nimport { selectAdmins } from 'app/store/common/admins';\r\n\r\nfunction Admin() {\r\n  const navigate = useNavigate();\r\n  const [admin, setAdmin] = useState([]);\r\n  const [departmentCategory, setDepartmentCategory] = useState([]);\r\n  const [projectCategory, setProjectCategory] = useState([]);\r\n  const departmentSelect = useRef();\r\n  const useYnSelect = useRef();\r\n  const projectSelect = useRef();\r\n  const nameInput = useRef();\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const projectComboBox = useSelector(selectComboBox).project;\r\n  const departmentComboBox = useSelector(selectComboBox).department;\r\n  const dataList = useSelector(selectAdmins).admins;\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      const filter1 = dataList.filter(\r\n        (obj) => nameInput.current.value === '' || obj.username.includes(nameInput.current.value)\r\n      );\r\n      const filter2 = filter1.filter(\r\n        (obj) =>\r\n          projectSelect.current.value === 'ALL' || obj.projectId === projectSelect.current.value\r\n      );\r\n      const filter3 = filter2.filter(\r\n        (obj) =>\r\n          departmentSelect.current.value === 'ALL' || obj.deptId === departmentSelect.current.value\r\n      );\r\n      const filter4 = filter3.filter(\r\n        (obj) => useYnSelect.current.value === 'ALL' || obj.useYn === useYnSelect.current.value\r\n      );\r\n      setSearchFlag(false);\r\n      setAdmin(filter4);\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n      const obj = dataList.filter((obj) => obj.userId === rowObj.userId);\r\n      const test = { ...obj[0] };\r\n      test.detailLink = [{ title: '수정', link: '/bss_server/systemManagement/admin/addOrUpdate' }];\r\n      console.log(test);\r\n      navigate(test.detailLink[0].link, {\r\n        state: test,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProjectCategory(projectComboBox);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"admin\" className=\"section__grid__wrap content qr__history\">\r\n      <section className=\"qr__history__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap groups\">\r\n            <div className=\"left\">\r\n              <div className=\"selector__wrap\">\r\n                <dl>\r\n                  <dt>프로젝트</dt>\r\n                  <dd>\r\n                    <select\r\n                      className=\"custom__select\"\r\n                      ref={projectSelect}\r\n                      onChange={(e) => {\r\n                        setDepartmentCategory(\r\n                          departmentComboBox.filter((obj) => obj.parentId === e.target.value)\r\n                        );\r\n                      }}\r\n                    >\r\n                      <option value=\"ALL\">전체</option>\r\n                      {projectCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n                <dl>\r\n                  <dt>부서</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={departmentSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      {departmentCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n                <dl>\r\n                  <dt>사용여부</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={useYnSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      <option value=\"1\">사용</option>\r\n                      <option value=\"0\">미사용</option>\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"input__wrap\">\r\n                <dl>\r\n                  <dt>사용자명</dt>\r\n                  <dd>\r\n                    <input\r\n                      onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n                      ref={nameInput}\r\n                      type=\"text\"\r\n                      className=\"custom__input\"\r\n                      placeholder=\"이름을 입력하세요\"\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <button\r\n                className=\"custom__btn\"\r\n                onClick={() => {\r\n                  searchBtnClick();\r\n                }}\r\n              >\r\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"f__medium\">검색</span>\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"custom__btn add__btn\"\r\n              onClick={() => {\r\n                navigate('/bss_server/systemManagement/admin/addOrUpdate', {\r\n                  state: {\r\n                    detailLink: [\r\n                      { title: '추가', link: '/bss_server/systemManagement/admin/addOrUpdate' },\r\n                    ],\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">추가</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={admin}\r\n              resizable\r\n              columns={[\r\n                { name: '부서명', id: 'deptName' },\r\n                { name: '사용자ID ', id: 'userId', width: '210px' },\r\n                { name: '이름', id: 'username' },\r\n                { name: '권한', id: 'roleName' },\r\n                { name: 'Email', id: 'email', width: '210px' },\r\n                { name: '연락처', id: 'phone', width: '145px' },\r\n                {\r\n                  name: '사용여부',\r\n                  id: 'useYn',\r\n                  formatter: (_, row) => (row.cells[6].data === '1' ? '사용' : '미사용'),\r\n                  width: '120px',\r\n                },\r\n                { name: '최종수정자', id: 'updateUsername' },\r\n                { name: '최종변경일시', id: 'updateTime', width: '180px' },\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n"],"names":["navigate","useNavigate","useState","admin","setAdmin","departmentCategory","setDepartmentCategory","projectCategory","setProjectCategory","departmentSelect","useRef","useYnSelect","projectSelect","nameInput","searchFlag","setSearchFlag","dispatch","useDispatch","projectComboBox","useSelector","selectComboBox","project","departmentComboBox","department","dataList","selectAdmins","admins","searchBtnClick","showMessage","message","variant","filter4","filter","obj","current","value","username","includes","projectId","deptId","useYn","useEffect","id","className","ref","onChange","e","parentId","target","map","idx","code","codeName","onKeyPress","key","type","placeholder","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","state","detailLink","title","link","rowObj","getAttribute","parentNode","childNodes","forEach","textContent","userId","test","console","log","gridRowClick","options","animationData","loading","width","height","sort","data","resizable","columns","name","formatter","_","row","cells","pagination","enabled","limit"],"sourceRoot":""}