{"version":3,"file":"static/js/1555.df19c203.chunk.js","mappings":"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","sources":["app/pages/deviceManagement/Groups.js"],"sourcesContent":["import 'assets/css/qrCertificationHistory.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectComboBox } from 'app/store/common/comboBox';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport { selectGroups } from 'app/store/common/groups';\r\n\r\nfunction Groups() {\r\n  const companyComboBox = useSelector(selectComboBox).company;\r\n  const projectComboBox = useSelector(selectComboBox).project;\r\n  const otaComboBox = useSelector(selectComboBox).otaVersion;\r\n  const navigate = useNavigate();\r\n  const [group, setGroup] = useState([]);\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const [companyCategory, setCompanyCategory] = useState([]);\r\n  const [projectCategory, setProjectCategory] = useState([]);\r\n  const [otaCategory, setOtaCategory] = useState([]);\r\n  const nameInput = useRef();\r\n  const companySelect = useRef();\r\n  const otaSelect = useRef();\r\n  const projectSelect = useRef();\r\n  const dispatch = useDispatch();\r\n  const dataList = useSelector(selectGroups).groups;\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      const filter1 = dataList.filter(\r\n        (obj) => nameInput.current.value === '' || obj.groupName.includes(nameInput.current.value)\r\n      );\r\n      const filter2 = filter1.filter(\r\n        (obj) => otaSelect.current.value === 'ALL' || obj.otaSeq === otaSelect.current.value\r\n      );\r\n      const filter3 = filter2.filter(\r\n        (obj) =>\r\n          companySelect.current.value === 'ALL' || obj.companyId === companySelect.current.value\r\n      );\r\n      const filter4 = filter3.filter(\r\n        (obj) =>\r\n          projectSelect.current.value === 'ALL' || obj.projectId === projectSelect.current.value\r\n      );\r\n      setGroup(filter4);\r\n      setSearchFlag(false);\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n      rowObj.detailLink = [\r\n        { title: '수정', link: '/bss_server/deviceManagement/groups/addOrUpdate' },\r\n      ];\r\n      navigate(rowObj.detailLink[0].link, {\r\n        state: rowObj,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOtaCategory(otaComboBox);\r\n    setCompanyCategory(companyComboBox);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"section__grid__wrap content qr__history\">\r\n      <section className=\"qr__history__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap groups\">\r\n            <div className=\"left\">\r\n              <div className=\"selector__wrap\">\r\n                <dl>\r\n                  <dt>회사</dt>\r\n                  <dd>\r\n                    <select\r\n                      className=\"custom__select\"\r\n                      onChange={(e) => {\r\n                        setProjectCategory(\r\n                          projectComboBox.filter((obj) => obj.parentId === e.target.value)\r\n                        );\r\n                      }}\r\n                      ref={companySelect}\r\n                    >\r\n                      <option value=\"ALL\">전체</option>\r\n                      {companyCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n                <dl>\r\n                  <dt>프로젝트</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={projectSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      {projectCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n                <dl>\r\n                  <dt>적용버전</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={otaSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      <option value=\"0\">미적용</option>\r\n                      {otaCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"input__wrap\">\r\n                <dl>\r\n                  <dt>그룹명</dt>\r\n                  <dd>\r\n                    <input\r\n                      onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n                      ref={nameInput}\r\n                      type=\"text\"\r\n                      className=\"custom__input\"\r\n                      placeholder=\"그룹명을 입력하세요\"\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <button\r\n                className=\"custom__btn\"\r\n                onClick={() => {\r\n                  searchBtnClick();\r\n                }}\r\n              >\r\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"f__medium\">검색</span>\r\n              </button>\r\n            </div>\r\n            {/* /deviceManagement/groups/addOrUpdate */}\r\n            <button\r\n              className=\"custom__btn add__btn\"\r\n              onClick={() => {\r\n                navigate('/bss_server/deviceManagement/groups/addOrUpdate', {\r\n                  state: {\r\n                    detailLink: [\r\n                      { title: '추가', link: '/bss_server/deviceManagement/groups/addOrUpdate' },\r\n                    ],\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">추가</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={group}\r\n              resizable\r\n              columns={[\r\n                // { name: '번호', id: 'companyId', width: '95px' },\r\n                { name: '그룹ID', id: 'groupId', width: '125px' },\r\n                // { name: '프로젝트ID', id: 'projectName', width: '140px' },\r\n                { name: '그룹명', id: 'groupName' },\r\n                { name: '프로젝트명', id: 'projectName' },\r\n                { name: '프로젝트ID', id: 'projectId', width: '140px' },\r\n                { name: '그룹 설명', id: 'groupDesc' },\r\n                { name: '장비 수', id: 'deviceCnt', width: '115px' },\r\n                { name: 'OTA 버전 Code', id: 'otaSeq' },\r\n                { name: 'OTA 버전 Value', id: 'otaVer' },\r\n                { name: '최종 수정자', id: 'updateUsername' },\r\n                { name: '최종 변경일시', id: 'updateTime', width: '180px' },\r\n                { name: '회사ID', id: 'companyId', width: '120px' },\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Groups;\r\n"],"names":["companyComboBox","useSelector","selectComboBox","company","projectComboBox","project","otaComboBox","otaVersion","navigate","useNavigate","useState","group","setGroup","searchFlag","setSearchFlag","companyCategory","setCompanyCategory","projectCategory","setProjectCategory","otaCategory","setOtaCategory","nameInput","useRef","companySelect","otaSelect","projectSelect","dispatch","useDispatch","dataList","selectGroups","groups","searchBtnClick","showMessage","message","variant","filter4","filter","obj","current","value","groupName","includes","otaSeq","companyId","projectId","useEffect","className","onChange","e","parentId","target","ref","map","idx","code","codeName","onKeyPress","key","type","placeholder","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","state","detailLink","title","link","rowObj","getAttribute","parentNode","childNodes","forEach","textContent","gridRowClick","options","animationData","loading","width","height","sort","data","resizable","columns","name","id","pagination","enabled","limit"],"sourceRoot":""}