{"version":3,"file":"static/js/4009.cf10a559.chunk.js","mappings":"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","sources":["app/auth/services/administrator/companies/config.js","app/auth/services/administrator/companies/index.js","app/pages/administrator/Companies.js"],"sourcesContent":["const config = {\r\n  getCompanies: '/api/companies',\r\n  getCompanyDetail: '/api/companies/:companyId',\r\n  addOrUpdateCompany: '/api/companies/',\r\n  deleteCompany: '/api/companies/:companyId',\r\n};\r\n\r\nexport default config;\r\n","import axios from 'axios';\r\nimport config from 'app/auth/services/administrator/companies/config';\r\n\r\nconst getCompanies = (paramObj) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(config.getCompanies, {\r\n        params: paramObj,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst getCompanyDetail = (companyId) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(config.getCompanyDetail.replace(':companyId', companyId))\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst addCompany = (companyObj) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(config.addOrUpdateCompany, companyObj)\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst updateCompany = (companyObj) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(config.addOrUpdateCompany, companyObj)\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst deleteCompany = (companyId) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .delete(config.deleteCompany.replace(':companyId', companyId))\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport { getCompanies, getCompanyDetail, addCompany, updateCompany, deleteCompany };\r\n","import 'assets/css/qrCertificationHistory.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useRef } from 'react';\r\nimport { getCompanies, getCompanyDetail } from 'app/auth/services/administrator/companies';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showMessage } from '../../store/fuse/messageSlice';\r\n\r\nfunction Companies() {\r\n  const navigate = useNavigate();\r\n  const [useYn, setUseYn] = useState('ALL');\r\n  const [companies, setCompanies] = useState([]);\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const nameInput = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      getCompanies({\r\n        companyName: nameInput.current.value,\r\n        useYn,\r\n      })\r\n        .then((data) => {\r\n          setCompanies(data);\r\n          setSearchFlag(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setSearchFlag(false);\r\n          dispatch(showMessage({ message: '고객사 목록 조회 실패.', variant: 'error' }));\r\n        });\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n      getCompanyDetail(rowObj.companyId)\r\n        .then((data) => {\r\n          rowObj.detailLink = [{ title: '수정', link: '/administrator/companies/addOrUpdate' }];\r\n          const obj = Object.assign(rowObj, data);\r\n          navigate(rowObj.detailLink[0].link, {\r\n            state: obj,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setSearchFlag(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"companies\" className=\"section__grid__wrap content qr__history\">\r\n      <section className=\"qr__history__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap groups\">\r\n            <div className=\"left\">\r\n              <div className=\"selector__wrap\">\r\n                <dl>\r\n                  <dt>사용여부</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" onChange={(e) => setUseYn(e.target.value)}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      <option value=\"1\">사용</option>\r\n                      <option value=\"0\">미사용</option>\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"input__wrap\">\r\n                <dl>\r\n                  <dt>회사명</dt>\r\n                  <dd>\r\n                    <input\r\n                      onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n                      ref={nameInput}\r\n                      type=\"text\"\r\n                      className=\"custom__input\"\r\n                      placeholder=\"회사명을 입력하세요\"\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <button\r\n                className=\"custom__btn\"\r\n                onClick={() => {\r\n                  searchBtnClick();\r\n                }}\r\n              >\r\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"f__medium\">검색</span>\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"custom__btn add__btn\"\r\n              onClick={() => {\r\n                navigate('/administrator/companies/addOrUpdate', {\r\n                  state: {\r\n                    detailLink: [{ title: '추가', link: '/administrator/companies/addOrUpdate' }],\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">추가</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={companies}\r\n              resizable\r\n              columns={[\r\n                { name: '번호', id: 'companyId', width: '95px' },\r\n                { name: '회사명', id: 'companyName' },\r\n                { name: '대표전화', id: 'telNo', width: '145px' },\r\n                { name: '주소', id: 'address', width: '300px' },\r\n                { name: '관리자ID', id: 'owner', width: '210px' },\r\n                { name: '시스템 관리자명', id: 'ownerName' },\r\n                {\r\n                  name: '사용여부',\r\n                  id: 'useYn',\r\n                  formatter: (_, row) => (row.cells[6].data === '1' ? '사용' : '미사용'),\r\n                  width: '120px',\r\n                },\r\n                { name: '최종 수정자', id: 'updateUsername' },\r\n                { name: '최종 변경일시', id: 'updateTime', width: '180px' },\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Companies;\r\n"],"names":["getCompanies","getCompanyDetail","addOrUpdateCompany","deleteCompany","paramObj","Promise","resolve","reject","axios","config","params","then","response","data","code","catch","error","companyId","addCompany","companyObj","updateCompany","navigate","useNavigate","useState","useYn","setUseYn","companies","setCompanies","searchFlag","setSearchFlag","nameInput","useRef","dispatch","useDispatch","searchBtnClick","showMessage","message","variant","companyName","current","value","console","log","id","className","onChange","e","target","onKeyPress","key","ref","type","placeholder","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","state","detailLink","title","link","rowObj","getAttribute","parentNode","childNodes","forEach","obj","textContent","Object","assign","gridRowClick","options","animationData","loading","width","height","sort","resizable","columns","name","formatter","_","row","cells","pagination","enabled","limit"],"sourceRoot":""}