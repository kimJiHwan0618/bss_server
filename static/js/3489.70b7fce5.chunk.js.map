{"version":3,"file":"static/js/3489.70b7fce5.chunk.js","mappings":"iQAAMA,EAAoB,CACxB,CACEC,YAAa,SACbC,UAAW,sBACXC,WAAY,wCACZC,SAAU,SACVC,UAAW,SACXC,UAAW,2BACXC,YAAa,qBACbC,WAAY,sBACZC,cAAe,6BAGbC,EAAa,CACjB,CAAEC,KAAM,iBAAkBC,GAAI,eAC9B,CAAED,KAAM,2BAAQC,GAAI,aACpB,CAAED,KAAM,qBAAOC,GAAI,cACnB,CAAED,KAAM,iBAAQC,GAAI,YACpB,CAAED,KAAM,2BAAQC,GAAI,aACpB,CAAED,KAAM,wCAAWC,GAAI,aACvB,CAAED,KAAM,iCAASC,GAAI,eACrB,CAAED,KAAM,2BAAQC,GAAI,cACpB,CAAED,KAAM,2BAAQC,GAAI,kB,sBC2FtB,MAxGA,WACE,OAAkCC,EAAAA,EAAAA,UAAS,IAAIC,MAAO,eAA/CC,EAAS,KAAEC,EAAY,KAC9B,GAA8BH,EAAAA,EAAAA,UAAS,IAAIC,MAAO,eAA3CG,EAAO,KAAEC,EAAU,KAE1B,GAA4BL,EAAAA,EAAAA,UAAS,IAAG,eAAzBM,GAAF,KAAW,MAClBC,GAAWC,EAAAA,EAAAA,MAejB,OACE,gBAAKC,UAAU,6DAA4D,UACzE,oBAASA,UAAU,qBAAoB,UACrC,iBAAKA,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,eAAc,WAC3B,iBAAKA,UAAU,iBAAgB,WAC7B,2BACE,wBAAI,8BACJ,2BACE,SAAC,IAAU,CAACC,SAAUR,EAAWS,SAAU,SAACC,GAAI,OAAKT,EAAaS,EAAK,KACvE,SAAC,IAAU,CAACF,SAAUN,EAASO,SAAU,SAACC,GAAI,OAAKP,EAAWO,EAAK,WAGvE,2BACE,wBAAI,8BACJ,yBACE,oBAAQH,UAAU,iBAAiBE,SAAU,SAACE,GAAC,OAAKP,EAAUO,EAAEC,OAAOC,MAAM,EAAC,WAC5E,mBAAQA,MAAM,GAAE,SAAC,8BAlChB,CAAC,gBAAO,iBAmCGC,KAAI,SAACC,EAAKC,GAAG,OACvB,mBAAkBH,MAAOE,EAAI,SAC1BA,GADUA,EAEJ,gBAMnB,iBAAKR,UAAU,cAAa,WAC1B,2BACE,wBAAI,wBACJ,yBACE,kBACEU,KAAK,OACLV,UAAU,gBACVW,YAAY,wEAIlB,2BACE,wBAAI,8BACJ,yBACE,kBACED,KAAK,OACLV,UAAU,gBACVW,YAAY,2EAKpB,oBAAQX,UAAU,cAAa,WAC7B,gBAAKY,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAc,UACxD,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,mDAGN,iBAAMlB,UAAU,YAAW,SAAC,wBAGhC,gBACEA,UAAU,aACVmB,QAAS,SAACf,IA5EC,SAACA,GACpB,IAAMgB,EAAS,CAAC,EACgC,OAA5ChB,EAAEC,OAAOgB,aAAa,oBACxBjB,EAAEC,OAAOiB,WAAWC,WAAWC,SAAQ,SAAChB,GACtCY,EAAO,GAAD,OAAIZ,EAAIa,aAAa,oBAAuBb,EAAIiB,WACxD,IACAC,QAAQC,IAAIP,GACZtB,EAAS,2CAA4C,CACnD8B,MAAOR,IAGb,CAkEYS,CAAazB,EACf,EAAE,UAEF,SAAC,IAAI,CACH0B,KAAK,OACL9B,UAAU,OACV+B,KAAMrD,EACNsD,QAAS5C,EACT6C,WAAY,CACVC,SAAS,EACTC,MAAO,cAQvB,C","sources":["app/data/serviceInquiry/disabilityHistory/gridData.js","app/pages/serviceInquiry/DisabilityHistory.js"],"sourcesContent":["const disabilityHistory = [\r\n  {\r\n    transaction: 'T00001',\r\n    eventTime: '2021-10-12 11:00:00',\r\n    deviceName: '강남구3번출구',\r\n    deviceId: 'TD0001',\r\n    errorCode: 'ABC001',\r\n    errorView: '시작화면',\r\n    siteManager: '홍길동',\r\n    actionDate: '2021-10-12 11:00:00',\r\n    actionSummary: '재부팅함',\r\n  },\r\n];\r\nconst gridColumn = [\r\n  { name: 'Transaction ID', id: 'transaction' },\r\n  { name: '발생일시', id: 'eventTime' },\r\n  { name: '장치명', id: 'deviceName' },\r\n  { name: '장치ID', id: 'deviceId' },\r\n  { name: '장애코드', id: 'errorCode' },\r\n  { name: '장애 발생화면', id: 'errorView' },\r\n  { name: '현장관리자', id: 'siteManager' },\r\n  { name: '조치일시', id: 'actionDate' },\r\n  { name: '조치내역', id: 'actionSummary' },\r\n];\r\nexport { disabilityHistory, gridColumn };\r\n","import 'assets/css/gridMain.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useState } from 'react';\r\nimport { disabilityHistory, gridColumn } from 'app/data/serviceInquiry/disabilityHistory/gridData';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction DisabilityHistory() {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const statusList = ['상태1', '상태2'];\r\n  const [status, setStatus] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n      console.log(rowObj);\r\n      navigate('/serviceInquiry/disabilityHistory/detail', {\r\n        state: rowObj,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"section__grid__wrap content grid__main disability__history\">\r\n      <section className=\"grid__main__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap\">\r\n            <div className=\"selector__wrap\">\r\n              <dl>\r\n                <dt>조회기간</dt>\r\n                <dd>\r\n                  <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\r\n                  <DatePicker selected={endDate} onChange={(date) => setEndDate(date)} />\r\n                </dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>조회그룹</dt>\r\n                <dd>\r\n                  <select className=\"custom__select\" onChange={(e) => setStatus(e.target.value)}>\r\n                    <option value=\"\">전체 상태</option>\r\n                    {statusList.map((obj, idx) => (\r\n                      <option key={obj} value={obj}>\r\n                        {obj}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </dd>\r\n              </dl>\r\n            </div>\r\n            <div className=\"input__wrap\">\r\n              <dl>\r\n                <dt>장치명</dt>\r\n                <dd>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"custom__input\"\r\n                    placeholder=\"장치이름을 입력하세요\"\r\n                  />\r\n                </dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>장애코드</dt>\r\n                <dd>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"custom__input\"\r\n                    placeholder=\"장애코드를 입력하세요\"\r\n                  />\r\n                </dd>\r\n              </dl>\r\n            </div>\r\n            <button className=\"custom__btn\">\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">검색</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={disabilityHistory}\r\n              columns={gridColumn}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisabilityHistory;\r\n"],"names":["disabilityHistory","transaction","eventTime","deviceName","deviceId","errorCode","errorView","siteManager","actionDate","actionSummary","gridColumn","name","id","useState","Date","startDate","setStartDate","endDate","setEndDate","setStatus","navigate","useNavigate","className","selected","onChange","date","e","target","value","map","obj","idx","type","placeholder","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","rowObj","getAttribute","parentNode","childNodes","forEach","textContent","console","log","state","gridRowClick","sort","data","columns","pagination","enabled","limit"],"sourceRoot":""}