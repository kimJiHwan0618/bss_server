{"version":3,"file":"static/js/8328.8fced58e.chunk.js","mappings":"yPA2BA,EA3BoB,CAClB,CACEA,eAAgB,aAChBC,SAAU,mBACVC,KAAM,IAER,CACEF,eAAgB,aAChBC,SAAU,mBACVC,KAAM,IAER,CACEF,eAAgB,aAChBC,SAAU,mBACVC,KAAM,IAER,CACEF,eAAgB,aAChBC,SAAU,mBACVC,KAAM,IAER,CACEF,eAAgB,aAChBC,SAAU,mBACVC,KAAM,K,iCC+FV,MA7GA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAMJ,EAASK,MACrB,GAAkCC,EAAAA,EAAAA,UAAS,IAAIC,MAAO,eAA/CC,EAAS,KAAEC,EAAY,KAC9B,GAA8BH,EAAAA,EAAAA,UAAS,IAAIC,MAAO,eAA3CG,EAAO,KAAEC,EAAU,KAC1B,GAAoCL,EAAAA,EAAAA,UAAS,IAAIC,MAAO,eAAjDK,EAAU,KAAEC,EAAa,KAW1BC,EAAa,CACjB,CAAEC,KAAM,2BAAQC,GAAI,kBACpB,CAAED,KAAM,qBAAOC,GAAI,YACnB,CAAED,KAAM,eAAMC,GAAI,OAAQC,UAAW,SAACC,EAAGd,GAAG,gBAAQA,EAAIe,MAAM,GAAGC,KAAI,QACrE,CACEL,KAAM,2BACNE,UAAW,SAACI,EAAGjB,GAAG,OAChBc,EAAAA,EAAAA,IACE,mBACEI,QAAS,YAdG,SAAClB,GACrBF,GAASqB,EAAAA,EAAAA,IAAY,CAAEC,QAAS,kBAAmBC,QAAS,UAC5DC,QAAQC,IAAIvB,EACd,CAYYwB,CAAcxB,EAChB,EACAyB,UAAU,wBAAuB,UAEjC,0BAAM,eAET,IAIP,OACE,iBAAKA,UAAU,0CAAyC,WAEtD,gBAAKA,UAAU,WAAU,UACvB,iBAAKA,UAAU,OAAM,WACnB,mBAAQP,QAlCI,WAClBxB,GAAU,EACZ,EAgCqC,UAC3B,gBAAKgC,QAAQ,YAAYC,OAAO,QAAO,UACrC,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,qCAIR,2BACE,eAAIN,UAAU,YAAW,SAAEzB,EAAIgC,cAC/B,wBAAKhC,EAAIiC,qBAKf,eAAIR,UAAU,2BAA0B,SAAC,wDAEzC,oBAASA,UAAU,sBAAqB,UACtC,iBAAKA,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,eAAc,WAC3B,iBAAKA,UAAU,iBAAgB,WAC7B,uBAAG,8BACH,SAAC,IAAU,CAACS,SAAU9B,EAAW+B,SAAU,SAACC,GAAI,OAAK/B,EAAa+B,EAAK,KACvE,0BAAM,OACN,SAAC,IAAU,CAACF,SAAU5B,EAAS6B,SAAU,SAACC,GAAI,OAAK7B,EAAW6B,EAAK,QAErE,oBAAQX,UAAU,cAAa,WAC7B,gBAAKY,KAAK,OAAOX,QAAQ,YAAYC,OAAO,eAAc,UACxD,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,mDAGN,iBAAMN,UAAU,YAAW,SAAC,wBAGhC,gBAAKA,UAAU,aAAY,UACzB,SAAC,IAAI,CACHa,KAAK,OACLb,UAAU,OACVT,KAAMuB,EACNC,QAAS9B,EACT+B,WAAY,CACVC,SAAS,EACTC,MAAO,SAIb,iBAAKlB,UAAU,SAAQ,WACrB,SAAC,IAAU,CAACS,SAAU1B,EAAY2B,SAAU,SAACC,GAAI,OAAK3B,EAAc2B,EAAK,KACzE,mBAAQX,UAAU,wBAAuB,UACvC,0BAAM,gCAER,uBAAG,wKAOf,C","sources":["app/data/deviceStatus/stationStatus/detail/searchLog/gridData.js","app/pages/deviceStatus/stationStatus/detail/SearchLog.js"],"sourcesContent":["const stationList = [\r\n  {\r\n    collectionDate: '2021-10-16',\r\n    fileName: 'TBS_20221213.zip',\r\n    size: 0.3,\r\n  },\r\n  {\r\n    collectionDate: '2021-10-17',\r\n    fileName: 'TBS_20221213.zip',\r\n    size: 0.3,\r\n  },\r\n  {\r\n    collectionDate: '2021-10-18',\r\n    fileName: 'TBS_20221213.zip',\r\n    size: 0.3,\r\n  },\r\n  {\r\n    collectionDate: '2021-10-19',\r\n    fileName: 'TBS_20221213.zip',\r\n    size: 0.3,\r\n  },\r\n  {\r\n    collectionDate: '2021-10-20',\r\n    fileName: 'TBS_20221213.zip',\r\n    size: 0.3,\r\n  },\r\n];\r\nexport default stationList;\r\n","import { useLocation, useNavigate } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport { Grid, _ } from 'gridjs-react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useState } from 'react';\r\nimport stationList from 'app/data/deviceStatus/stationStatus/detail/searchLog/gridData';\r\nimport 'assets/css/searchLog.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\n\r\nfunction SearchLog() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const row = location.state;\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [searchDate, setSearchDate] = useState(new Date());\r\n\r\n  const historyBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const downLoadClick = (row) => {\r\n    dispatch(showMessage({ message: 'download click.', variant: 'info' }));\r\n    console.log(row);\r\n  };\r\n\r\n  const gridColumn = [\r\n    { name: '수집일자', id: 'collectionDate' },\r\n    { name: '파일명', id: 'fileName' },\r\n    { name: '용량', id: 'size', formatter: (_, row) => `${row.cells[2].data}Mb` },\r\n    {\r\n      name: '다운로드',\r\n      formatter: (a, row) =>\r\n        _(\r\n          <button\r\n            onClick={() => {\r\n              downLoadClick(row);\r\n            }}\r\n            className=\"custom__btn f__medium\"\r\n          >\r\n            <span>Download</span>\r\n          </button>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"section__grid__wrap content search__log\">\r\n      {/* sub nav */}\r\n      <div className=\"sub__nav\">\r\n        <div className=\"left\">\r\n          <button onClick={historyBack}>\r\n            <svg viewBox=\"0 0 24 24\" stroke=\"white\">\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M11 17l-5-5m0 0l5-5m-5 5h12\"\r\n              />\r\n            </svg>\r\n          </button>\r\n          <dl>\r\n            <dt className=\"f__medium\">{row.deviceName}</dt>\r\n            <dd>{row.groupName}</dd>\r\n          </dl>\r\n        </div>\r\n      </div>\r\n      {/* // sub nav */}\r\n      <h3 className=\"f__medium section__title\">장치 로그파일 검색</h3>\r\n      {/* 디바이스 로그조회 */}\r\n      <section className=\"device__log__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap\">\r\n            <div className=\"calendar__wrap\">\r\n              <p>조회기간</p>\r\n              <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\r\n              <span>~</span>\r\n              <DatePicker selected={endDate} onChange={(date) => setEndDate(date)} />\r\n            </div>\r\n            <button className=\"custom__btn\">\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">검색</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"grid__wrap\">\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={stationList}\r\n              columns={gridColumn}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <DatePicker selected={searchDate} onChange={(date) => setSearchDate(date)} />\r\n            <button className=\"custom__btn f__medium\">\r\n              <span>수집하기</span>\r\n            </button>\r\n            <p>이미 해당 날짜에 수집한 내역이 있으면 수집할 수 없습니다.</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* // 디바이스 로그조회 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchLog;\r\n"],"names":["collectionDate","fileName","size","navigate","useNavigate","location","useLocation","dispatch","useDispatch","row","state","useState","Date","startDate","setStartDate","endDate","setEndDate","searchDate","setSearchDate","gridColumn","name","id","formatter","_","cells","data","a","onClick","showMessage","message","variant","console","log","downLoadClick","className","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","deviceName","groupName","selected","onChange","date","fill","sort","stationList","columns","pagination","enabled","limit"],"sourceRoot":""}