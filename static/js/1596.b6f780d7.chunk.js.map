{"version":3,"file":"static/js/1596.b6f780d7.chunk.js","mappings":"ytUA4LA,MA/KA,WACE,IAAMA,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAAgBC,MAC5CC,GAAuBH,EAAAA,EAAAA,IAAYC,EAAAA,IAAgBG,aACnDC,GAAuBL,EAAAA,EAAAA,IAAYC,EAAAA,IAAgBK,aACnDC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAoCF,EAAAA,EAAAA,WAAS,GAAM,eAA5CG,EAAU,KAAEC,EAAa,KAChC,GAAwDJ,EAAAA,EAAAA,UAAS,IAAG,eAA7DK,EAAoB,KAAEC,EAAuB,KACpD,GAAoCN,EAAAA,EAAAA,UAAS,IAAG,eAAzCO,EAAU,KAAEC,EAAa,KAChC,GAA0CR,EAAAA,EAAAA,UAAS,IAAG,eAA/CS,EAAa,KAAEC,EAAgB,KAChCC,GAAgBC,EAAAA,EAAAA,UAChBC,GAAkBD,EAAAA,EAAAA,UAClBE,GAAcF,EAAAA,EAAAA,UACdG,GAAqBH,EAAAA,EAAAA,UACrBI,GAAWJ,EAAAA,EAAAA,UACXK,GAAWC,EAAAA,EAAAA,MACXC,GAAW5B,EAAAA,EAAAA,IAAY6B,EAAAA,IAEvBC,EAAiB,WACrB,GAAKlB,EAyBHc,GAASK,EAAAA,EAAAA,IAAY,CAAEC,QAAS,8EAAmBC,QAAS,cAzB7C,CACfpB,GAAc,GACd,IAiBMqB,EAjBUN,EAASO,QACvB,SAACC,GAAG,MAC8B,KAAhChB,EAAciB,QAAQC,OAAgBF,EAAIG,SAASC,SAASpB,EAAciB,QAAQC,MAAM,IAEpEH,QACtB,SAACC,GAAG,MACgC,KAAlCd,EAAgBe,QAAQC,OACxBF,EAAIK,WAAWD,SAASlB,EAAgBe,QAAQC,MAAM,IAElCH,QACtB,SAACC,GAAG,MACmC,QAArCZ,EAAmBa,QAAQC,OAC3BF,EAAIhC,eAAiBoB,EAAmBa,QAAQC,KAAK,IAEjCH,QACtB,SAACC,GAAG,MAAmC,QAA9Bb,EAAYc,QAAQC,OAAmBF,EAAIM,UAAYnB,EAAYc,QAAQC,KAAK,IAEnEH,QACtB,SAACC,GAAG,MAAgC,QAA3BX,EAASY,QAAQC,OAAmBF,EAAIO,cAAgBlB,EAASY,QAAQC,KAAK,IAEzF3B,EAAYuB,GACZrB,GAAc,EAChB,CAGF,EAqBA,OANA+B,EAAAA,EAAAA,YAAU,WACR7B,EAAwBZ,GACxBgB,EAAiBpB,GACjBkB,EAAcZ,EAChB,GAAG,KAGD,gBAAKwC,UAAU,8CAA6C,UAC1D,oBAASA,UAAU,kBAAiB,UAClC,iBAAKA,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,eAAc,WAC3B,iBAAKA,UAAU,iBAAgB,WAC7B,oBAAQA,UAAU,iBAAiBC,IAAKtB,EAAmB,WACzD,mBAAQc,MAAM,MAAK,SAAC,oCACnBxB,EAAqBiC,KAAI,SAACX,EAAKY,GAAG,OACjC,mBAAkBV,MAAOF,EAAIa,KAAK,SAC/Bb,EAAIc,UADMF,EAEJ,QAGb,oBAAQH,UAAU,iBAAiBC,IAAKvB,EAAY,WAClD,mBAAQe,MAAM,MAAK,SAAC,8BACnBpB,EAAc6B,KAAI,SAACX,EAAKY,GAAG,OAC1B,mBAAuBV,MAAOF,EAAIa,KAAK,SACpCb,EAAIc,UADMd,EAAIa,KAER,QAGb,oBAAQJ,UAAU,iBAAiBC,IAAKrB,EAAS,WAC/C,mBAAQa,MAAM,MAAK,SAAC,8BACnBtB,EAAW+B,KAAI,SAACX,EAAKY,GAAG,OACvB,mBAAuBV,MAAOF,EAAIa,KAAK,SACpCb,EAAIc,UADMd,EAAIa,KAER,WAIf,iBAAKJ,UAAU,cAAa,WAC1B,kBACEM,KAAK,OACLN,UAAU,gBACVO,YAAY,iDACZN,IAAK1B,EACLiC,WAAY,SAACC,GAAC,MAAe,UAAVA,EAAEC,KAAmBzB,GAAgB,KAE1D,kBACEqB,KAAK,OACLN,UAAU,gBACVO,YAAY,oDACZN,IAAKxB,EACL+B,WAAY,SAACC,GAAC,MAAe,UAAVA,EAAEC,KAAmBzB,GAAgB,QAG5D,oBACEe,UAAU,cACVW,QAAS,WACP1B,GACF,EAAE,WAEF,gBAAK2B,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAc,UACxD,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,mDAGN,iBAAMlB,UAAU,YAAW,SAAC,wBAGhC,iBACEA,UAAU,aACVW,QAAS,SAACF,IArFC,SAACA,GAE4B,OAA5CA,EAAEU,OAAOC,aAAa,oBACxBpD,GAAc,GACdqD,EAAAA,WAAwB,CACtB,CAAEC,MAAO,eAAMC,KAAM,kDAEvB7D,EAAS,gDAAiD,CACxD8D,MAAOH,IAGb,CA2EYI,CAAahB,EACf,EAAE,WAEc,IAAf1C,IACC,iBAAKiC,UAAU,gBAAe,WAC5B,gBAAKA,UAAU,QACf,SAAC,IAAM,CACLA,UAAU,SACV0B,QAAS,CAAEC,cAAeC,GAC1BC,MAAO,IACPC,OAAQ,UAId,SAAC,IAAI,CACH9B,UAAU,OACV+B,KAAMlE,EACNmE,KAAK,OACLC,QAAS,CACP,CAAEC,KAAM,2BAAQC,GAAI,mBAAoBN,MAAO,SAC/C,CAAEK,KAAM,iCAASC,GAAI,cACrB,CAAED,KAAM,6BAAUC,GAAI,WAAYN,MAAO,SAEzC,CAAEK,KAAM,8CAAYC,GAAI,kBAAmBN,MAAO,SAClD,CAAEK,KAAM,qBAAOC,GAAI,aACnB,CAAED,KAAM,4BAASC,GAAI,eAAgBN,MAAO,SAC5C,CAAEK,KAAM,2DAAeC,GAAI,mBAAoBN,MAAO,SACtD,CAAEK,KAAM,qDAAcC,GAAI,cAAeN,MAAO,UAElDO,WAAY,CACVC,SAAS,EACTC,MAAO,eAQvB,C","sources":["app/pages/deviceStatus/StationStatus.js"],"sourcesContent":["import 'assets/css/stationStatus.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectComboBox } from 'app/store/common/comboBox';\r\nimport { selectStationStatus } from 'app/store/common/stationStatus';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport detailData from 'app/data/deviceManagement/stations/detail.json';\r\n\r\nfunction StationStatus() {\r\n  const groupComboBox = useSelector(selectComboBox).group;\r\n  const manufacturerComboBox = useSelector(selectComboBox).manufacturer;\r\n  const stationStateComboBox = useSelector(selectComboBox).stationState;\r\n  const navigate = useNavigate();\r\n  const [stations, setStations] = useState([]);\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const [manufacturerCategory, setManufacturerCategory] = useState([]);\r\n  const [dsCategory, setDsCategory] = useState([]);\r\n  const [groupCategory, setGroupCategory] = useState([]);\r\n  const deviceIdInput = useRef();\r\n  const deviceNameInput = useRef();\r\n  const groupSelect = useRef();\r\n  const manufacturerSelect = useRef();\r\n  const dsSelect = useRef();\r\n  const dispatch = useDispatch();\r\n  const dataList = useSelector(selectStationStatus);\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      const filter1 = dataList.filter(\r\n        (obj) =>\r\n          deviceIdInput.current.value === '' || obj.deviceId.includes(deviceIdInput.current.value)\r\n      );\r\n      const filter2 = filter1.filter(\r\n        (obj) =>\r\n          deviceNameInput.current.value === '' ||\r\n          obj.deviceName.includes(deviceNameInput.current.value)\r\n      );\r\n      const filter3 = filter2.filter(\r\n        (obj) =>\r\n          manufacturerSelect.current.value === 'ALL' ||\r\n          obj.manufacturer === manufacturerSelect.current.value\r\n      );\r\n      const filter4 = filter3.filter(\r\n        (obj) => groupSelect.current.value === 'ALL' || obj.groupId === groupSelect.current.value\r\n      );\r\n      const filter5 = filter4.filter(\r\n        (obj) => dsSelect.current.value === 'ALL' || obj.deviceState === dsSelect.current.value\r\n      );\r\n      setStations(filter5);\r\n      setSearchFlag(false);\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      detailData.detailLink = [\r\n        { title: '상세', link: '/bss_server/deviceStatus/stationStatus/detail' },\r\n      ];\r\n      navigate('/bss_server/deviceStatus/stationStatus/detail', {\r\n        state: detailData,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setManufacturerCategory(manufacturerComboBox);\r\n    setGroupCategory(groupComboBox);\r\n    setDsCategory(stationStateComboBox);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"section__grid__wrap content station__status\">\r\n      <section className=\"station__status\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap\">\r\n            <div className=\"selector__wrap\">\r\n              <select className=\"custom__select\" ref={manufacturerSelect}>\r\n                <option value=\"ALL\">전체 제조사</option>\r\n                {manufacturerCategory.map((obj, idx) => (\r\n                  <option key={idx} value={obj.code}>\r\n                    {obj.codeName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <select className=\"custom__select\" ref={groupSelect}>\r\n                <option value=\"ALL\">전체 그룹</option>\r\n                {groupCategory.map((obj, idx) => (\r\n                  <option key={obj.code} value={obj.code}>\r\n                    {obj.codeName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <select className=\"custom__select\" ref={dsSelect}>\r\n                <option value=\"ALL\">전체 상태</option>\r\n                {dsCategory.map((obj, idx) => (\r\n                  <option key={obj.code} value={obj.code}>\r\n                    {obj.codeName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"input__wrap\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"custom__input\"\r\n                placeholder=\"Device ID를 입력하세요\"\r\n                ref={deviceIdInput}\r\n                onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"custom__input\"\r\n                placeholder=\"이름을 입력하세요\"\r\n                ref={deviceNameInput}\r\n                onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"custom__btn\"\r\n              onClick={() => {\r\n                searchBtnClick();\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">검색</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              className=\"grid\"\r\n              data={stations}\r\n              sort=\"true\"\r\n              columns={[\r\n                { name: '제조사명', id: 'manufacturerName', width: '120px' },\r\n                { name: '스테이션명', id: 'deviceName' },\r\n                { name: '스테이션ID', id: 'deviceId', width: '150px' },\r\n                // { name: '그룹ID', id: 'groupId', width: '110px' },\r\n                { name: '스테이션 상태명', id: 'deviceStateName', width: '170px' },\r\n                { name: '그룹명', id: 'groupName' },\r\n                { name: '배터리 수', id: 'batteryCount', width: '140px' },\r\n                { name: '이용가능한 배터리 수', id: 'availableBattery', width: '210px' },\r\n                { name: '스테이션 상태 코드', id: 'deviceState', width: '160px' },\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StationStatus;\r\n"],"names":["groupComboBox","useSelector","selectComboBox","group","manufacturerComboBox","manufacturer","stationStateComboBox","stationState","navigate","useNavigate","useState","stations","setStations","searchFlag","setSearchFlag","manufacturerCategory","setManufacturerCategory","dsCategory","setDsCategory","groupCategory","setGroupCategory","deviceIdInput","useRef","deviceNameInput","groupSelect","manufacturerSelect","dsSelect","dispatch","useDispatch","dataList","selectStationStatus","searchBtnClick","showMessage","message","variant","filter5","filter","obj","current","value","deviceId","includes","deviceName","groupId","deviceState","useEffect","className","ref","map","idx","code","codeName","type","placeholder","onKeyPress","e","key","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","target","getAttribute","detailData","title","link","state","gridRowClick","options","animationData","loading","width","height","data","sort","columns","name","id","pagination","enabled","limit"],"sourceRoot":""}