{"version":3,"file":"static/js/5616.9ced9665.chunk.js","mappings":"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","sources":["app/pages/systemManagement/Project.js"],"sourcesContent":["import 'assets/css/qrCertificationHistory.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { useState, useRef } from 'react';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport { selectProject } from 'app/store/common/project';\r\n\r\nfunction Project() {\r\n  const navigate = useNavigate();\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const [project, setProject] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const useYnSelect = useRef();\r\n  const nameInput = useRef();\r\n  const dataList = useSelector(selectProject).project;\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      const filter1 = dataList.filter(\r\n        (obj) => nameInput.current.value === '' || obj.projectName.includes(nameInput.current.value)\r\n      );\r\n      const filter2 = filter1.filter(\r\n        (obj) => useYnSelect.current.value === 'ALL' || obj.useYn === useYnSelect.current.value\r\n      );\r\n      setProject(filter2);\r\n      setSearchFlag(false);\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n      rowObj.detailLink = [\r\n        { title: '수정', link: '/bss_server/systemManagement/project/addOrUpdate' },\r\n      ];\r\n      navigate(rowObj.detailLink[0].link, {\r\n        state: rowObj,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"project\" className=\"section__grid__wrap content qr__history\">\r\n      <section className=\"qr__history__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap groups\">\r\n            <div className=\"left\">\r\n              <div className=\"selector__wrap\">\r\n                <dl>\r\n                  <dt>사용여부</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={useYnSelect}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      <option value=\"1\">사용</option>\r\n                      <option value=\"0\">미사용</option>\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"input__wrap\">\r\n                <dl>\r\n                  <dt>프로젝트명</dt>\r\n                  <dd>\r\n                    <input\r\n                      onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n                      ref={nameInput}\r\n                      type=\"text\"\r\n                      className=\"custom__input\"\r\n                      placeholder=\"이름을 입력하세요\"\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <button\r\n                className=\"custom__btn\"\r\n                onClick={() => {\r\n                  searchBtnClick();\r\n                }}\r\n              >\r\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"f__medium\">검색</span>\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"custom__btn add__btn\"\r\n              onClick={(e) => {\r\n                navigate('/bss_server/systemManagement/project/addOrUpdate', {\r\n                  state: {\r\n                    detailLink: [\r\n                      { title: '추가', link: '/bss_server/systemManagement/project/addOrUpdate' },\r\n                    ],\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">추가</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={project}\r\n              resizable\r\n              columns={[\r\n                { name: '프로젝트ID', id: 'projectId', width: '135px' },\r\n                { name: '프로젝트명', id: 'projectName' },\r\n                { name: '설명', id: 'projectDesc' },\r\n                {\r\n                  name: '사용여부',\r\n                  id: 'useYn',\r\n                  formatter: (_, row) => (row.cells[3].data === '1' ? '사용' : '미사용'),\r\n                  width: '120px',\r\n                },\r\n                { name: '그룹 수', id: 'groupCnt', width: '130px' },\r\n                { name: '장비 수', id: 'deviceCnt', width: '130px' },\r\n                { name: '최종수정자명', id: 'updateUsername' },\r\n                { name: '최종수정일시', id: 'updateTime', width: '180px' },\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n"],"names":["navigate","useNavigate","useState","searchFlag","setSearchFlag","project","setProject","dispatch","useDispatch","useYnSelect","useRef","nameInput","dataList","useSelector","selectProject","searchBtnClick","showMessage","message","variant","filter2","filter","obj","current","value","projectName","includes","useYn","id","className","ref","onKeyPress","e","key","type","placeholder","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","state","detailLink","title","link","rowObj","target","getAttribute","parentNode","childNodes","forEach","textContent","gridRowClick","options","animationData","loading","width","height","sort","data","resizable","columns","name","formatter","_","row","cells","pagination","enabled","limit"],"sourceRoot":""}