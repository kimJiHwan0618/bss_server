{"version":3,"file":"static/js/7135.bc188e91.chunk.js","mappings":"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","sources":["app/auth/services/administrator/systemAdmin/config.js","app/auth/services/administrator/systemAdmin/index.js","app/pages/administrator/SystemAdministrator.js"],"sourcesContent":["const config = {\r\n  getSystemAdmin: '/api/users/administrators',\r\n  getSystemAdminDetail: '/api/users/administrators/:userId',\r\n  addOrUpdateSystemAdmin: '/api/users/administrators/',\r\n};\r\n\r\nexport default config;\r\n","import axios from 'axios';\r\nimport config from 'app/auth/services/administrator/systemAdmin/config';\r\n\r\nconst getSystemAdmin = (paramObj) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(config.getSystemAdmin, {\r\n        params: paramObj,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst getSystetmAdminDetail = (userId) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(config.getSystemAdminDetail.replace(':userId', userId))\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst updateSystemAdmin = (systemAdminObj) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(config.addOrUpdateSystemAdmin, systemAdminObj)\r\n      .then((response) => {\r\n        if (response.data.code === 200) {\r\n          const data = response.data.response;\r\n          resolve(data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport { getSystemAdmin, getSystetmAdminDetail, updateSystemAdmin };\r\n","import 'assets/css/qrCertificationHistory.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid } from 'gridjs-react';\r\nimport 'gridjs/dist/theme/mermaid.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport loading from 'assets/img/loading.json';\r\nimport { getSystemAdmin, getSystetmAdminDetail } from 'app/auth/services/administrator/systemAdmin';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectComboBox } from 'app/store/common/comboBox';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\n\r\nfunction SystemAdministrator() {\r\n  const companyComboBox = useSelector(selectComboBox).company;\r\n  const navigate = useNavigate();\r\n  const [useYn, setUseYn] = useState('ALL');\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const [systemAdmin, setSystemAdmin] = useState([]);\r\n  const [companyCategory, setCompanyCategory] = useState([]);\r\n  const nameInput = useRef();\r\n  const companySelect = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const searchBtnClick = () => {\r\n    if (!searchFlag) {\r\n      setSearchFlag(true);\r\n      getSystemAdmin({\r\n        companyId: companySelect.current.value,\r\n        username: nameInput.current.value,\r\n        useYn,\r\n      })\r\n        .then((data) => {\r\n          setSystemAdmin(data);\r\n          setSearchFlag(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setSearchFlag(false);\r\n          dispatch(showMessage({ message: '시스템 관리자 목록 조회 실패.', variant: 'error' }));\r\n        });\r\n    } else {\r\n      dispatch(showMessage({ message: '데이터를 조회하고 있습니다.', variant: 'info' }));\r\n    }\r\n  };\r\n\r\n  const gridRowClick = (e) => {\r\n    const rowObj = {};\r\n    if (e.target.getAttribute('data-column-id') !== null) {\r\n      setSearchFlag(true);\r\n      e.target.parentNode.childNodes.forEach((obj) => {\r\n        rowObj[`${obj.getAttribute('data-column-id')}`] = obj.textContent;\r\n      });\r\n\r\n      getSystetmAdminDetail(rowObj.userId)\r\n        .then((data) => {\r\n          rowObj.detailLink = [\r\n            { title: '수정', link: '/administrator/systemAdministrator/addOrUpdate' },\r\n          ];\r\n          const obj = Object.assign(rowObj, data);\r\n          navigate(rowObj.detailLink[0].link, {\r\n            state: obj,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setSearchFlag(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCompanyCategory(companyComboBox);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"sysAdmin\" className=\"section__grid__wrap content qr__history\">\r\n      <section className=\"qr__history__search\">\r\n        <div className=\"section__inner\">\r\n          <div className=\"search__wrap groups\">\r\n            <div className=\"left\">\r\n              <div className=\"selector__wrap\">\r\n                <dl>\r\n                  <dt>회사</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" ref={companySelect}>\r\n                      <option value=\"\">전체</option>\r\n                      {companyCategory.map((obj, idx) => (\r\n                        <option key={obj.code} value={obj.code}>\r\n                          {obj.codeName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n                <dl>\r\n                  <dt>사용여부</dt>\r\n                  <dd>\r\n                    <select className=\"custom__select\" onChange={(e) => setUseYn(e.target.value)}>\r\n                      <option value=\"ALL\">전체</option>\r\n                      <option value=\"1\">사용</option>\r\n                      <option value=\"0\">미사용</option>\r\n                    </select>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"input__wrap\">\r\n                <dl>\r\n                  <dt>사용자명</dt>\r\n                  <dd>\r\n                    <input\r\n                      onKeyPress={(e) => e.key === 'Enter' && searchBtnClick()}\r\n                      ref={nameInput}\r\n                      type=\"text\"\r\n                      className=\"custom__input\"\r\n                      placeholder=\"사용자명을 입력하세요\"\r\n                    />\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n              <button\r\n                className=\"custom__btn\"\r\n                onClick={() => {\r\n                  searchBtnClick();\r\n                }}\r\n              >\r\n                <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"f__medium\">검색</span>\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"custom__btn add__btn\"\r\n              onClick={() => {\r\n                navigate('/administrator/systemAdministrator/addOrUpdate', {\r\n                  state: {\r\n                    detailLink: [\r\n                      { title: '추가', link: '/administrator/systemAdministrator/addOrUpdate' },\r\n                    ],\r\n                  },\r\n                });\r\n              }}\r\n            >\r\n              <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                />\r\n              </svg>\r\n              <span className=\"f__medium\">추가</span>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className=\"grid__wrap\"\r\n            onClick={(e) => {\r\n              gridRowClick(e);\r\n            }}\r\n          >\r\n            {searchFlag === true && (\r\n              <div className=\"loading__wrap\">\r\n                <div className=\"bg\" />\r\n                <Lottie\r\n                  className=\"lottie\"\r\n                  options={{ animationData: loading }}\r\n                  width={300}\r\n                  height={300}\r\n                />\r\n              </div>\r\n            )}\r\n            <Grid\r\n              sort=\"true\"\r\n              className=\"grid\"\r\n              data={systemAdmin}\r\n              columns={[\r\n                { name: '번호', id: 'companyId', width: '95px' },\r\n                { name: '사용자명', id: 'username' },\r\n                { name: '사용자ID', id: 'userId', width: '210px' },\r\n                { name: '연락처', id: 'phone', width: '145px' },\r\n                { name: '이메일', id: 'email', width: '210px' },\r\n                { name: '회사명', id: 'companyName' },\r\n                {\r\n                  name: '사용여부',\r\n                  id: 'useYn',\r\n                  formatter: (_, row) => (row.cells[6].data === '1' ? '사용' : '미사용'),\r\n                  width: '120px',\r\n                },\r\n                { name: '등록자', id: 'createUsername' },\r\n                { name: '수정자', id: 'updateUsername' },\r\n                { name: '변경일시', id: 'updateTime', width: '180px' },\r\n              ]}\r\n              pagination={{\r\n                enabled: true,\r\n                limit: 10,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SystemAdministrator;\r\n"],"names":["getSystemAdmin","getSystemAdminDetail","addOrUpdateSystemAdmin","paramObj","Promise","resolve","reject","axios","config","params","then","response","data","code","catch","error","getSystetmAdminDetail","userId","updateSystemAdmin","systemAdminObj","companyComboBox","useSelector","selectComboBox","company","navigate","useNavigate","useState","useYn","setUseYn","searchFlag","setSearchFlag","systemAdmin","setSystemAdmin","companyCategory","setCompanyCategory","nameInput","useRef","companySelect","dispatch","useDispatch","searchBtnClick","showMessage","message","variant","companyId","current","value","username","console","log","useEffect","id","className","ref","map","obj","idx","codeName","onChange","e","target","onKeyPress","key","type","placeholder","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","state","detailLink","title","link","rowObj","getAttribute","parentNode","childNodes","forEach","textContent","Object","assign","gridRowClick","options","animationData","loading","width","height","sort","columns","name","formatter","_","row","cells","pagination","enabled","limit"],"sourceRoot":""}